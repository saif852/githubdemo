module "caller_identities" {
  source = "./caller_identity_module"

  aws_contexts = {
    account1 = {
      profile = "profile1"
      region  = "us-west-1"
    }
    account2 = {
      profile = "profile2"
      region  = "us-west-2"
    }
  }
}

module "caller_identities" {
  source = "./caller_identity_module"

  aws_contexts = {
    account1 = {
      profile   = "profile1"
      region    = "us-west-1"
      role_arn  = "arn:aws:iam::ACCOUNT_ID:role/ROLE_NAME"
    }
    account2 = {
      profile   = "profile2"
      region    = "us-west-2"
      role_arn  = "arn:aws:iam::ACCOUNT_ID:role/ROLE_NAME"
    }
  }
}

module "caller_identities" {
  source = "./caller_identity_module"

  target_admin_role_arn = "arn:aws:iam::ACCOUNT_ID:role/ROLE_NAME"

  aws_contexts = {
    account1 = {
      profile   = "profile1"
      region    = "us-west-1"
      role_arn  = var.target_admin_role_arn
    }
    account2 = {
      profile   = "profile2"
      region    = "us-west-2"
      role_arn  = var.target_admin_role_arn
    }
  }
}
module "caller_identity_1" {
  source = "./caller_identity_module"
  provider_config = {
    alias   = "account1"
    profile = "profile1"
    region  = "us-west-1"
  }
}

#AWS CloudFormation Stack Set Administration Role Assume Role Policy
data "aws_iam_policy_document" "AWSCloudFormationStackSetAdministrationRole_assume_role_policy" {
  statement {
    actions = ["sts:AssumeRole"]
    effect  = "Allow"

    principals {
      identifiers = ["cloudformation.amazonaws.com"]
      type        = "Service"
    }
  }
}
# AWS CloudFormation Stack Set Administration Role
resource "aws_iam_role" "AWSCloudFormationStackSetAdministrationRole" {
  assume_role_policy = data.aws_iam_policy_document.AWSCloudFormationStackSetAdministrationRole_assume_role_policy.json
  name               = "AWSCloudFormationStackSetAdministrationRole"
}
# AWS CloudFormation Stack Set Name
resource "aws_cloudformation_stack_set" "SplunkDM" {
  administration_role_arn = aws_iam_role.AWSCloudFormationStackSetAdministrationRole.arn
  name                    = "SplunkDMReadOnly"

template_body = jsonencode({ "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "This AWS CloudFormation template creates SplunkDMReadOnly IAM role used by Splunk.",
    "Resources" : {
      "SplunkDMReadOnly" : {
        "Type" : "AWS::IAM::Role",
        "Properties" : {
          "RoleName" : "SplunkDMReadOnly",
          "Description" : "This role will allow Splunk Data Manager to read metadata from a set of services (AWS Identity and Access Management (IAM) Access Analyzer, AWS CloudFormation, AWS CloudTrail, Amazon GuardDuty, AWS Identity and Access Management (IAM) and AWS Security Hub) to discover settings so that Splunk can make recommendations during onboarding.",
          "AssumeRolePolicyDocument" : {
            "Version" : "2012-10-17",
            "Statement" : [
              {
                "Sid" : "SplunkDMReadOnlyTrustRelationship",
                "Effect" : "Allow",
                "Action" : "sts:AssumeRole",
                "Principal" : {
                  "AWS" : "arn:aws:iam::708093709242:role/cobank"
                },
                "Condition" : {
                  "StringEquals" : {
                    "sts:ExternalId" : "96d778ff-3527-11ee-b485-d3f6926b1058"
                  }
                }
              }
            ]
          },
          "Policies" : [
            {
              "PolicyName" : "SplunkDMReadPermissions",
              "PolicyDocument" : {
                "Version" : "2012-10-17",
                "Statement" : [
                  {
                    "Effect" : "Allow",
                    "Action" : [
                      "iam:GetRole",
                      "iam:GetRolePolicy",
                      "iam:ListRolePolicies",
                      "iam:ListAttachedRolePolicies",
                      "iam:GetPolicy",
                      "iam:GetPolicyVersion",
                      "guardduty:GetMasterAccount",
                      "securityhub:ListMembers",
                      "securityhub:GetMasterAccount",
                      "securityhub:GetEnabledStandards",
                      "securityhub:ListInvitations",
                      "cloudformation:DescribeStacks"
                    ],
                    "Resource" : [
                      {
                        "Fn::Join" : [
                          ":",
                          [
                            "arn:aws:iam:", { "Ref" : "AWS::AccountId" },
                            "role/AWSCloudFormationStackSetExecutionRole"
                          ]
                        ]
                      },
                      {
                        "Fn::Join" : [
                          ":",
                          [
                            "arn:aws:iam:", { "Ref" : "AWS::AccountId" },
                            "role/aws-service-role/member.org.stacksets.cloudformation.amazonaws.com/AWSServiceRoleForCloudFormationStackSetsOrgMember"
                          ]
                        ]
                      },
                      {
                        "Fn::Join" : [
                          ":",
                          [
                            "arn:aws:iam:", { "Ref" : "AWS::AccountId" },
                            "role/SplunkDM*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join" : [
                          ":",
                          [
                            "arn:aws:iam:", { "Ref" : "AWS::AccountId" },
                            "policy/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join" : [
                          ":",
                          [
                            "arn:aws:guardduty:*", { "Ref" : "AWS::AccountId" },
                            "detector/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join" : [
                          ":",
                          [
                            "arn:aws:securityhub:*", { "Ref" : "AWS::AccountId" },
                            "hub/default"
                          ]
                        ]
                      },
                      {
                        "Fn::Join" : [
                          ":",
                          [
                            "arn:aws:cloudformation:*", { "Ref" : "AWS::AccountId" },
                            "stack/StackSet-SplunkDM*/*"
                          ]
                        ]
                      }
                    ]
                  },
                  {
                    "Effect" : "Allow",
                    "Action" : [
                      "cloudwatch:ListMetrics",
                      "cloudwatch:GetMetricStatistics",
                      "cloudtrail:DescribeTrails",
                      "access-analyzer:ListAnalyzers",
                      "guardduty:ListDetectors",
                      "guardduty:ListMembers",
                      "guardduty:ListInvitations",
                      "guardduty:GetFindingsStatistics",
                      "ec2:DescribeFlowLogs"
                    ],
                    "Resource" : "*"
                  },
                  {
                    "Effect" : "Allow",
                    "Action" : [
                      "logs:DescribeLogGroups",
                      "logs:DescribeSubscriptionFilters"
                    ],
                    "Resource" : [{
                      "Fn::Join" : [
                        ":",
                        [
                          "arn:aws:logs:*", { "Ref" : "AWS::AccountId" },
                          "log-group:*"
                        ]
                      ]
                    }]
                  },
                  {
                    "Effect" : "Allow",
                    "Action" : ["firehose:DescribeDeliveryStream"],
                    "Resource" : [{
                      "Fn::Join" : [
                        ":",
                        [
                          "arn:aws:firehose:*", { "Ref" : "AWS::AccountId" },
                          "deliverystream/SplunkDM*"
                        ]
                      ]
                    }]
                  },
                  {
                    "Effect" : "Allow",
                    "Action" : ["events:DescribeRule"],
                    "Resource" : [{
                      "Fn::Join" : [
                        ":",
                        [
                          "arn:aws:events:*", { "Ref" : "AWS::AccountId" },
                          "rule/SplunkDM*"
                        ]
                      ]
                    }]
                  },
                  {
                    "Effect" : "Allow",
                    "Action" : ["s3:ListBucket"],
                    "Resource" : ["arn:aws:s3:::splunkdmfailed*"]
                  },
                  {
                    "Effect" : "Allow",
                    "Action" : ["lambda:GetFunction"],
                    "Resource" : [{
                      "Fn::Join" : [
                        ":",
                        [
                          "arn:aws:lambda:*", { "Ref" : "AWS::AccountId" },
                          "function:SplunkDM*"
                        ]
                      ]
                    }]
                  }
                ]
              }
            }
          ]
        }
      }
    }
  })
}
#AWS CloudFormation Stack Set Execution Role Policy
data "aws_iam_policy_document" "AWSCloudFormationStackSetAdministrationRole_ExecutionPolicy" {
  statement {
    actions   = ["sts:AssumeRole"]
    effect    = "Allow"
    resources = ["arn:aws:iam::*:role/${aws_cloudformation_stack_set.SplunkDMDataIngest.execution_role_name}"]
  }
}

resource "aws_iam_role_policy" "AWSCloudFormationStackSetAdministrationRole_ExecutionPolicy" {
  name   = "ExecutionPolicy"
  policy = data.aws_iam_policy_document.AWSCloudFormationStackSetAdministrationRole_ExecutionPolicy.json
  role   = aws_iam_role.AWSCloudFormationStackSetAdministrationRole.name
}

module "caller_identity_2" {
  source = "./caller_identity_module"
  provider_config = {
    alias   = "account2"
    profile = "profile2"
    region  = "us-west-2"
  }
}

output "caller_identity_account1" {
  value = module.caller_identity_1.data.aws_caller_identity.current
}

output "caller_identity_account2" {
  value = module.caller_identity_2.data.aws_caller_identity.current
}


